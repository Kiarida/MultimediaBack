<?php

namespace ByExample\RecommandationsBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\EntityRepository;
use ByExample\RecommandationsBundle\Entity\Algorithm;
use Doctrine\ORM\Query;
use \DateTime;

/**
 * AlgorithmRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AlgorithmRepository extends EntityRepository{

	public function addAlgorithmUser($idAlgo, $position, $idUtilisateur){
                $repositoryAlgo = $this->_em->getRepository('ByExampleRecommandationsBundle:Algorithm');
                $repository = $this->_em->getRepository('ByExampleDemoBundle:Utilisateur');
                $algo = $repositoryAlgo->findOneById($idAlgo);
                $user = $repository->findOneById($idUtilisateur);
		$algorithm = new AlgorithmUser();
		$algorithm->setIdAlgorithm($algo);
		$algorithm->setIdUtilisateur($user);
		$algorithm->setPosition($position);
		$this->_em->persist($algorithm);
		$this->_em->flush();

		$idAlgo = $algorithm->getId();

	    return $idAlgo;
	}


	public function listAlgorithmsWithLimits(){
		
                $query = $this->_em->createQuery(
                'SELECT partial a.{id, nom, label, used}, partial l.{id, symbole, valeur}
                FROM ByExampleRecommandationsBundle:Algorithm a 
                LEFT JOIN a.idlimit l
                ');
                $algo = $query->getResult(Query::HYDRATE_ARRAY);
                return $algo;
	}




}
