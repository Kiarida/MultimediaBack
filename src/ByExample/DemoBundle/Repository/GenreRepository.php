<?php

namespace ByExample\DemoBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\EntityRepository;
use ByExample\DemoBundle\Entity\Genre;
use Doctrine\ORM\Query;


/**
 * GenreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GenreRepository extends EntityRepository
{
	public function findAll()
    {
        $rsm = new ResultSetMapping($em);
        $rsm->addEntityResult('ByExampleDemoBundle:Genre','g');
        $rsm->addScalarResult('id','id');
        $rsm->addScalarResult('libelle','libelle');
        $rsm->addScalarResult('urlCover', 'urlCover');

        $this->_em->flush();
        $this->_em->clear();

        $query = $this->_em->createNativeQuery('SELECT g.* FROM genre g', $rsm);
        $genre = $query->getResult();
        return $genre;
    }


		public function addGenre($item, $infos){
			$new = [];
			$repository = $this->_em->getRepository('ByExampleDemoBundle:Genre');

			$repoItem = $this->_em->getRepository('ByExampleDemoBundle:Item');
			$itemFound=$repoItem->find($item["id"]);
			$informa=array();


			for($i = 0; $i < 4; $i++){

					$genre=$infos["terms"][$i];
					if($genre){

				    $genres = $repository->findByLibelle($genre["name"]);
				    
				   
						if(!$genres){
					    $newGenre=new Genre();
					    $newGenre->setLibelle($genre["name"]);
					    $newGenre->addIditem($itemFound);
						$newGenre->setUrlCover($itemFound->getUrlcover());
							//array_push($informa, $newGenre);
					    $this->_em->persist($newGenre);
					    $this->_em->flush();

							$idGenre = $newGenre->getId();
						}
						else{
							//return $genres;
							//array_push($informa, $genres["id"]);

							$idGenre = $genres[0]->getId();
						}
						$conn = $this->_em->getConnection();
						$query = $this->_em->createQuery('SELECT partial i.{id, titre} FROM ByExampleDemoBundle:Item i LEFT JOIN i.idgenre g WHERE i.id=:id AND g =:idgenre')
           				->setParameter("id",$item["id"])
            			->setParameter("idgenre",$idGenre);
					    $asso = $query->getResult(Query::HYDRATE_OBJECT);
					     if(!$asso){
				      		$tag = $conn->insert("itemgenre", array("idGenre"=>$idGenre, "idItem"=>$item["id"]));
				      }
				}
		}
		//return $genres;
			//array_push($new, $itemFound);

	}

}
