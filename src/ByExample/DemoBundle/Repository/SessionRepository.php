<?php

namespace ByExample\DemoBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\EntityRepository;
use ByExample\DemoBundle\Entity\Tag;
use ByExample\DemoBundle\Entity\Utilisateur;
use ByExample\DemoBundle\Entity\Session;
use Doctrine\ORM\Query;
use \DateTime;

/**
 * SessionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SessionRepository extends EntityRepository{

	public function findItemsBySessionId($id_session){
		$query=$this->_em->createQuery('SELECT partial i.{id,url,titre,note,duree,typeitem,nbvues,date,urlCover}, partial a.{id,nom}
	    FROM ByExampleDemoBundle:Session s JOIN s.idecoute e, ByExampleDemoBundle:Item i  LEFT JOIN i.idartiste a
        WHERE e.iditem = i.id AND s.id = :id_session')
	    ->setParameter("id_session",$id_session);
	    $items=$query->getResult(Query::HYDRATE_ARRAY);
	    return $items;
	}

	public function findTagsBySessionId($id_session){
		$query=$this->_em->createQuery('SELECT t.id, t.libelle
	    FROM ByExampleDemoBundle:Session s JOIN s.idtag t
        WHERE s.id = :id_session')
	    ->setParameter("id_session",$id_session);
	    $items=$query->getResult();
	    return $items;
	}

	public function findCurrentSession($id_user){
		$query=$this->_em->createQuery('SELECT s
	    FROM ByExampleDemoBundle:Session s
        WHERE s.idutilisateur = :id_user AND s.datefin is NULL')
	    ->setParameter("id_user",$id_user);
	    try {
   	 		$session = $query->getSingleResult();
		} catch (\Doctrine\Orm\NoResultException $e) {
    		$session = null;
		}
	    return $session;
	}

	public function findSessionsByUser($id_user, $limit){
		$query=$this->_em->createQuery('SELECT s.id, s.datedebut, s.datefin
	    FROM ByExampleDemoBundle:Session s
        WHERE s.idutilisateur = :id_user ORDER BY s.id DESC')
	    ->setParameter("id_user",$id_user);
	    $items=$query->setMaxResults($limit)->getResult();
	    return $items;
	}

	public function findTagSession($tags, $id_session){
		$query=$this->_em->createQuery('SELECT s.id FROM ByExampleDemoBundle:Session s JOIN s.idtag t WHERE s.id =:session AND t.id = :tag')
		->setParameter("session",$id_session)->setParameter("tag",$tags[0]["id"]);
        $tagsession=$query->getResult();
        return $tagsession;
	}

	public function insertSessionTag($tags, $id_session){
		$conn = $this->_em->getConnection();
        $tag = $conn->insert("tagsession", array("idTag"=>$tags[0]["id"], "idSession"=>$id_session));
        return $tag;
	}

	public function insertTag($libelle, $id_session){
		$newTag = new Tag();
        $newTag->setLibelle(strtolower($libelle));
        $this->_em->persist($newTag);
        $this->_em->flush();
        $idTag = $newTag->getId();
        $conn = $this->_em->getConnection();
        $conn->insert("tagsession", array("idTag"=>$idTag, "idSession"=>$id_session));
        return $newTag;
	}

	public function addSession($id_user){
		$session = new Session();
		$session->setDatedebut(new DateTime());

		$repository = $this->_em->getRepository('ByExampleDemoBundle:Utilisateur');
        $utilisateur = $repository->findOneById($id_user);
		$session->setIdutilisateur($utilisateur);

		$this->_em->persist($session);
		$this->_em->flush();

		return $session;
	}
}