<?php

namespace ByExample\DemoBundle\Repository;

use Doctrine\ORM\EntityRepository;
use ByExample\DemoBundle\Entity\Note;
use \DateTime;
/**
 * NoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NoteRepository extends EntityRepository
{
	public function findNoteByArtiste($idArtiste)
	{
       
		$query = $this->_em->createQuery('SELECT a.note FROM ByExampleDemoBundle:Artiste a WHERE a.id = :idArtiste')
        ->setParameter('idArtiste', $idArtiste);
        $note = $query->getResult();
        return $note;
	}

    public function findNoteByItem($idItem)
    {
       
        $query = $this->_em->createQuery('SELECT i.note FROM ByExampleDemoBundle:Item i WHERE i.id = :idItem')
        ->setParameter('idItem', $idItem);
        $note = $query->getResult();
        return $note;
    }

    public function putNote($idItem, $note, $idUtilisateur){
        $repository = $this->_em->getRepository('ByExampleDemoBundle:Note');
        $notes = $repository->findByIditem($idItem);
        if($notes){
            $query = $this->_em->createQuery('UPDATE ByExampleDemoBundle:Note n SET n.note = :note WHERE n.iditem = :iditem')
        ->setParameter('iditem', $idItem)->setParameter('note', $note);
        $notes = $query->getResult();
        return $notes;
        }   
        else{
            $repository = $this->_em->getRepository('ByExampleDemoBundle:Utilisateur');
            $utilisateur = $repository->findOneById($idUtilisateur);
            $repository = $this->_em->getRepository('ByExampleDemoBundle:Item');
            $item = $repository->findOneById($idItem);
            $newNote = new Note();
            $newNote->setNote($note);

            $date = new DateTime();
            $newNote->setDate($date);
            $newNote->setIdutilisateur($utilisateur);
            $newNote->setIditem($item);
            $newNote->setType(0);
            $this->_em->persist($newNote);
            $this->_em->flush();
            $idNote = $newNote->getId();
            //$conn = $this->_em->getConnection();
            
   
            //$conn->insert("Note", array("idUtilisateur"=>$idUtilisateur, "idItem"=>$idItem));
            return $idNote;
            }
        //return $idNote;
        //echo "hi";
    }

    public function getUserNoteItem($iditem, $iduser){
        $query = $this->_em->createQuery('SELECT n.note FROM ByExampleDemoBundle:Note n WHERE n.iditem = '.$iditem.' AND n.idutilisateur ='.$iduser);
        $note = $query->getResult();
        return $note;
    }
}
